# Changes and Possible Issues with State-Machine version

Q: What does "reward window" mean in training trials (centerPokeTrigger off)?
	- Does reward window never timeout for them?
Q: Should ITI timeout consider nose-out?? (Hard-coded preferences)

To Do:
- ****  What about Matlab: can a new Arduino message interrupt the execution of stateTransitionEvent??? ****
	- would need to implement a queue of incoming messages??
	- This is likely the cause of some errors... working on fix
- When fixed-duration Center & Side Laser overlap, side laser is cut short. Why?
- There still is a synchronization issue when side & center pokes happen nearly simultaneously during reward window (was it an abort or a decision?)
	- Not a practical concern because it takes time for mouse to switch ports

Low priority:
- Stop new stats/history files from overwriting old ones
- Improve Matlab update timing by using Timer?
	- is Timer actually more accurate than pause()?


Notes on EventQueue:
- Implemented EventQueue.
- What actions take place outside of queue:
	- nose in/out state variables — only used for ITI timeouts
	- sync_counter updates
	- manualRewardCount updates
	- logging of laser stim to command window


DONE:
- Log update histogram stats to log file (mean? median? max?)
- Fix time synchronization issues!!!
	- Ambiguity when Matlab decides that Reward_Window timed out while the Arduino registers a rewarded decision poke - DONE
	- Allow batch Arduino commands to execute atomically — DONE
- Should ITI counter reset on *nose-out* rather than nose-in? - DONE - added preference
- Select path dialog: default to previous path (I think??)
- Add new laser stim type: center-in -> side-out
	- Accomplish this by adding a new checkbox:
		"Side laser follows center laser"
- **** Add "deliver extra reward button" (during experiment)
- Stop expt button: turn off all LEDs/Laser/reward
- Have Max-duration timeout for variable laser stim


pokeHistory.laser -> logs side laser state (as before)
	(can we change this to 'sideLaserState' ?)
pokeHistory.centerLaserState -> logs center laser state (new)
- Testing this out

Poke timing counts on NoseIn. If nose is in too long, next trial can already start. OK for now?

Overlapping laser stimuli interact in unexpected ways.

How to distinguish between mouse-elicited rewards (true rewards)
and "bonus" rewards manually delivered by experimenter
- Fixed... needs testing


After trial is initiated, does centerPoke count as "decision" "incorrect" poke? Transition to ITI??
-Yes

Need for Markov option? -NO


================================

# Errors in stats/history file format:
- every other poke is blank - FIXED
- 'L/R PortStatus' is missing ACTIVATE value - FIXED
- New stats file has empty 'sync_times' field, this is missing in old version
	- this actually seems right

=============

Manual Reward delivery:
- add log message 'Manual reward left/right'
- standard 'Reward delivered' message should also appear in log soon after
- Manual rewards do not show up in existing reward statistics
- But there is new field, pokeHistory(pokeCount).manualRewards, that lists the # of manual rewards triggered prior to that poke
	- the assumption is that manual rewards are triggered in between pokes. Is that true???

=====
=====

EXAMPLE OF Arduino-Matlab comms when lick & timeout happen at once:

***  Center Poke — Trial 85 Initiated  ***
Rewarded ports:  R:1  L:1
14:51:57.015 To Arduino: "F 1 0; O 3 0; O 2 0; A 2 1; A 3 1"
14:51:57.089 From Arduino: "O 1"
14:51:59.009 To Arduino: "F 3 0; F 2 0; A 2 0; A 3 0; ^"
14:51:59.018 From Arduino: "D 2"
***  Decision Poke — rightPokeRewarded  - REWARDED Trial ***
Current block reward count: 85
           L      R    Tot
Rewards:  37     48     85
Trials:   37     48     85
14:51:59.043 To Arduino: "A 2 0; A 3 0"
14:51:59.085 From Arduino: "^"
14:51:59.111 From Arduino: "O 2"
14:52:00.032 To Arduino: "O 1 0; A 2 0; A 3 0"
